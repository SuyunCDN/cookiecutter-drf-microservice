Welcome to cookiecutter-drf-microservice documentation!
=======================================================

.. image:: https://api.travis-ci.org/alainivars/cookiecutter-drf-microservice.svg?branch=master
    :target: http://travis-ci.org/alainivars/cookiecutter-drf-microservice
    :alt: Build status

.. image:: https://coveralls.io/repos/github/alainivars/cookiecutter-drf-microservice/badge.svg?branch=master
    :target: https://coveralls.io/github/alainivars/cookiecutter-drf-microservice?branch=master
    :alt: Test coverage status

.. image:: https://requires.io/github/alainivars/cookiecutter-drf-microservice/requirements.svg?branch=master
    :target: https://requires.io/github/alainivars/cookiecutter-drf-microservice/requirements/?branch=master
    :alt: Requirements Status

.. image:: https://img.shields.io/pypi/dm/cookiecutter-drf-microservice.svg
   :target: https://pypi.python.org/pypi/cookiecutter-drf-microservice/
   :alt: pypi download

.. image:: https://img.shields.io/pypi/pyversions/cookiecutter-drf-microservice.svg
   :target: https://pypi.python.org/pypi/cookiecutter-drf-microservice/
   :alt: python supported

.. image:: https://img.shields.io/pypi/l/cookiecutter-drf-microservice.svg
   :target: https://pypi.python.org/pypi/cookiecutter-drf-microservice/
   :alt: licence

.. image:: https://img.shields.io/pypi/v/cookiecutter-drf-microservice.svg
   :target: https://pypi.python.org/pypi/cookiecutter-drf-microservice
   :alt: PyPi version

.. image:: https://landscape.io/github/alainivars/cookiecutter-drf-microservice/master/landscape.svg?style=flat
   :target: https://landscape.io/github/alainivars/cookiecutter-drf-microservice/master
   :alt: Code Health

.. image:: https://readthedocs.org/projects/cookiecutter-drf-microservice/badge/?version=latest
   :target: https://readthedocs.org/projects/cookiecutter-drf-microservice/?badge=latest
   :alt: Documentation status

.. image:: https://pypip.in/wheel/cookiecutter-drf-microservice/badge.svg
   :target: https://pypi.python.org/pypi/cookiecutter-drf-microservice/
   :alt: PyPi wheel

About cookiecutter-drf-microservice
====================================
Cookiecutter-drf-microservice is a ready-to-use API skeleton generator:
    - generates it,
And you:
    - add your unittest and endpoints,
And it will help you to:
    - generate the documentation with Coreapi,
    - test it with Tox,
    - package it (TODO with) Docker,
    - deploy it (TODO with) Terraform or Ansible

It sounds simple and it is. Take a look at `Drf-microservice`_ it's now generated by `Cookiescutter-drf-microservice`_.

Something disturb you in the code? Don't hesitate to open a an issue and contribute.

Releases Notes
==============
    - 0.7.1: Remove all .md file, update the doc, the docker config file
    - 0.7.0: cookiecutter-drf-microservice got it own separate repository
    - 0.6.1: Update dependencies
    - 0.6.0: total refactoring for add cookiecutter
    - 0.5.2: fix dependencies security alert
    - 0.5.1: fix some document presentation on github and pypi
    - 0.5.0: Initial publication version

Bugs and evolution policies
===========================
When you will find a bug or propose an evolution create a ticket on:

- `Issue Cookiescutter-drf-microservice`_ if it's about the generation process
- `Issue Drf-microservice`_ if it's about a functionality in the generated drf process

To setup
========
+ If needed install https://github.com/audreyr/cookiecutter or ::

    pip install cookiecutter


+ Cookiescutter will generate it for you ::

    cookiecutter gh:alainivars/cookiecutter-drf-microservice                                                                                                                    00:31:00
    github_username [my-github-user-name]: alainivars
    github_repository_name [my-repository]: drf-microservice
    app_name [my_app]: my_api
    email [my-email@my-domain.my]: alainivars@gmail.com
    description [The description of my drf app]: A simple demo on how to use cookiecutter-drf-microservice generator

+ Now we just jump in the new directory and run tox to ::
    - be sure that everything as worked fine
    - generate the documentation
    - generate an virtualenv

    .. code-block:: shell

        cd my-drf-microservice
        tox

For all operation with the new "my-drf-microservice" I invite you to go at `Drf-microservice`_

Functionalities DONE
====================
    - support basic auth
    - support token auth
    - endpoint json file POST,GET
    - endpoint login/logout
    - endpoint get tocken
    - postgreSQL support

DevOps tools DONE
=================
    - the docker-compose configuration file
    - endpoint get status Nagios/Icinga2

Functionalities TODO
====================
    - AWS ssm secret
    - endpoint json file DELETE,PUT?
    - create different version:
        - Aws S3 support (in progress)
        - Aws RDS support
        - Aws Elastisearch support
        - Redis support
        - Aerospike support
        - ...
    - Make static doc more modular & less duplicated

DevOps tools TODO
=================
    - the docker-image configuration file  (in progress)
    - the Packer configuration file  (in progress)
    - the Terraform configuration file AWS (in progress)
    - the Terraform configuration file GCD
    - the Terraform configuration file Azure
    - add getSentry support
    - add Aws Cloudwatch support
    - the Ansible configuration file AWS
    - the Ansible configuration file GCD
    - the Ansible configuration file Azure
    - the Juju configuration file AWS
    - the Juju configuration file GCD
    - the Juju configuration file Azure
    - Make static doc more modular & less duplicated

.. _`Cookiescutter-drf-microservice`: https://github.com/alainivars/cookiecutter-drf-microservice
.. _`Drf-microservice`: https://github.com/alainivars/drf-microservice
.. _`Issue Cookiescutter-drf-microservice`: https://github.com/alainivars/cookiecutter-drf-microservice/issues
.. _`Issue Drf-microservice`: https://github.com/alainivars/drf-microservice/issues
